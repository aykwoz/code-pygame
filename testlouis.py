
#Une fois le jeu lancé, le programme permet de jouer un cube jaune qui bouge sur une grille quadrillée

#Variable:
#Enjeu (True ou False): Dit si le joueur a lancé la partie
#JoueurMort (True ou False): Dit si le joueur est mort
#ToucheSol (True ou False): Dit si le joueur touche le sol
#hauteur_terrain (variable): Nombre de plateformes maximales en hauteur
#largeur_terrain (variable): Nombre de plateformes maximales en largeur
#plateforme (liste): Code chaque case du quadrillage pour définir la présence des différents obstacles
#x_joueur(variable): Défini la position du joueur sur l'axe des absisses selon le quadrillage
#y_joueur(variable): Défini la position du joueur sur l'axe des ordonnées selon le quadrillage
#windowHeight(variable): Défini la taille de la fenêtre sur la hauteur
#windowWidth(variable): Défini la taille de la fenêtre sur la largeur


import os
from math import floor,ceil
import pygame, sys, random
from pygame.locals import *

#Centrer plus ou moins la fenêtre
os.environ['SDL_VIDEO_WINDOW_POS'] = "%d,%d" % (0,30)

pygame.init()
#Lance un timer
clock = pygame.time.Clock()
clock = pygame.time.Clock()

ecran = pygame.display.set_mode((0,0))

plateformes=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,49,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,2,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,1,1,1,1,1,1,1,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,50],
             ]
             
plateformes=[
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 50],
    [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [1, 0, 49, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 50],
    [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 50],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 50],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 50]]
 


niv_1 = [[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,10,0,0,0,0,0,0,0,0,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,5,0,0,0,0,0,0,0,0,3],
         [2,2,2,2,2,4,4,2,2,2,1,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3]]

def afficher_un_niv (longueur, hauteur, niv):

	for i in range(0,15):

		for j in range(0,30):

			if niv[int(i)][int(j)] == 1:
				surface.blit(terre_image, [longueur, hauteur])

			elif niv_1[int(i)][int(j)] == 2:
				surface.blit(herbe_image, [longueur, hauteur])

			elif niv[int(i)][int(j)] == 3:
				surface.blit(caisse_image, [longueur, hauteur])

			elif niv[int(i)][int(j)] == 4:
				surface.blit(eau_image, [longueur, hauteur])
			
			elif niv[int(i)][int(j)] == 5:
				surface.blit(pic_image, [longueur, hauteur])

			elif niv[int(i)][int(j)] == 10:
				surface.blit(drapeau, [longueur, hauteur])
                                
			longueur = longueur + 50

		longueur = 0
		hauteur = hauteur + 50


EnJeu = True
windowWidth = 1500
windowHeight = 750
squareX = 0
squareY = 0
quadrillage= 50
hauteur_terrain=(windowHeight//quadrillage)
largeur_terrain=(windowWidth//quadrillage)
YELLOW = (255, 255, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
RED = (255, 0, 0)

surface = pygame.display.set_mode((windowWidth, windowHeight))

pygame.display.set_caption('ERROR 404')
drapeau = pygame.image.load("drapeau.png")
run_droite_1 = pygame.image.load("run1.png")
run_droite_2 = pygame.image.load("run2.png")
run_droite_3 = pygame.image.load("run3.png")
run_droite_4 = pygame.image.load("run4.png")
glisse_droite = pygame.image.load("glisse-droite.png")
glisse_gauche = pygame.image.load("glisse-gauche.png")
stay_droite = pygame.image.load("stay_droite.gif")
run_gauche_1 = pygame.image.load("run1_gauche.png")
run_gauche_2 = pygame.image.load("run2_gauche.png")
run_gauche_3 = pygame.image.load("run3_gauche.png")
run_gauche_4 = pygame.image.load("run4_gauche.png")
jump_droite = pygame.image.load("jump_droite.png")
jump_gauche = pygame.image.load("jump_gauche.png")
stay_droite_1 = pygame.image.load("stay_droite_1.png")
stay_droite_2 = pygame.image.load("stay_droite_2.png")
stay_gauche_1 = pygame.image.load("stay_gauche_1.png")
stay_gauche_2 = pygame.image.load("stay_gauche_2.png")
terre_image = pygame.image.load("plaine_dirt.png")
herbe_image = pygame.image.load("plaine_herbe.png")
pic_image = pygame.image.load("pics-bon.png")
eau_image = pygame.image.load("Eaux_plaine.png")
caisse_image = pygame.image.load("caisse.png")
lave_image = pygame.image.load("lave_chateau.png")
brique_image = pygame.image.load("brique.png")
brique_jungle_image = pygame.image.load("brique_jungle.png")
derniere_touche = 1
touche_presser = False
x_joueur=1
y_joueur=(windowHeight//quadrillage)-2
g=1
ToucheSol=True
ToucheGauche=False
ToucheDroite=False
EnLAir=False
TempsAir=0
EnSaut=False
elan_y_joueur=0
distance_sol=0
distance_gauche=0
distance_toit=0
DebutSaut=False
sprite_image = pygame.image.load("stay_droite.gif")
sprite_fond = pygame.image.load("fond_niv_1.jpg")

# Charger l'effet sonore
sonsaut = pygame.mixer.Sound('sonsaut.mp3')
sonpas = pygame.mixer.Sound('sonpas.mp3')

sonsauter=False

Gauche=False
Droite=False
niveau = 0
frame_1_saut=False
ToucheToit=False
DoubleSautPossible=False
DoubleSautUtilise=False
Y_Maintenu=False
distance_droite=1
distance_gauche=1
elan_gauche_joueur=0
elan_droite_joueur=0
diviseur=30
JoueurMort=False
frame = 0
TempsMort=0
while EnJeu == True:
    frame = frame + 1
    if frame > 28 :
        frame = 0
    
    if distance_droite<1:
        x_joueur=floor(x_joueur)
        
    if distance_gauche<1:
        x_joueur=ceil(x_joueur)+1
        y_joueur+=0.2
        
    if niveau==1:
        plateformes=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
			  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,49,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,2,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,2,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,2,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,1,1,1,1,1,1,1,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,50],
             ]
             
        niv_1 = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,10,0,0,0,0,0,0,0,0,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
         [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,5,0,0,5,5,0,0,0,0,0,3],
         [2,2,2,2,2,4,4,2,2,2,1,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3]]

            
    if niveau==2:
        plateformes=[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,50],
              [1,0,0,0,0,49,1,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,2,1,1,1,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,1,1,1,1,1,1,2,0,1,50],
              [1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,50],
              [1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,50],
              [1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,50], 
              [1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,50], 
              [1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,50], 
              [1,0,0,0,0,0,1,1,1,1,1,2,0,0,1,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,50],
             ]
		
        niv_1 = [[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
         [3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,5,5,5,3,0,0,0,0,0,0,3],
	     [3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
	     [3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
	     [3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
	     [3,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
	     [3,3,3,3,3,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,3,3,3,3,0,0,0,3],
	     [2,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3],
	     [1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,5],
	     [1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,5],
	     [1,0,0,0,0,0,0,5,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,2],
	     [1,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,3,3,5,0,0,0,1],
	     [1,0,0,0,0,0,0,1,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
	     [1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
	     [1,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,4,4,4,2,2,2,2,2,2,2,2,2,1]]
         
    if niveau==3:
        plateformes=[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,50],
              [1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,50],
              [1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,50],
              [1,0,0,49,1,0,0,0,1,0,0,0,0,0,1,50],
              [1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,50],
              [1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,50],
              [1,0,0,0,1,0,0,0,1,0,0,2,0,0,1,50],
              [1,0,0,0,1,0,0,0,2,0,0,1,0,0,1,50],
              [1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,50],
              [1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,50],
              [1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,50],
              [1,0,0,0,2,1,1,1,1,1,1,1,0,0,1,50],
              [1,0,0,0,2,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,2,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,1,0,0,2,0,0,1,1,1,1,1,50],
              [1,0,0,0,1,0,0,1,0,0,1,0,0,0,1,50],
              [1,0,0,0,1,0,0,1,0,0,1,0,0,0,1,50],
              [1,0,0,0,1,0,0,1,0,0,1,0,0,0,1,50], 
              [1,0,0,0,1,0,0,1,0,0,1,0,0,0,1,50], 
              [1,0,0,0,1,0,0,1,0,0,1,0,0,0,1,50], 
              [1,0,0,0,1,0,0,1,0,0,1,0,0,0,1,50], 
              [1,0,0,0,1,0,0,1,0,0,1,0,0,0,1,50], 
              [1,0,0,0,2,1,1,1,0,0,2,0,0,0,1,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,50],
             ]
             
        niv_1 = [[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
         [3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
	     [3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
	     [3,0,0,0,3,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
	     [3,3,3,3,3,3,3,3,3,3,3,3,3,5,5,5,3,3,3,3,3,3,3,3,3,5,0,0,0,1],
	     [2,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1],
	     [1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1],
	     [1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,5,3,3,3,3,3,3,3,3,0,0,0,1],
	     [1,0,0,0,3,3,3,3,3,5,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
	     [1,0,0,0,2,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
	     [1,0,0,0,1,0,0,0,0,0,0,0,0,3,0,0,0,3,3,3,3,3,3,3,3,5,0,0,0,1],
	     [1,0,0,0,1,0,0,0,5,3,3,3,3,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1],
	     [1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1],
	     [1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1],
	     [1,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1]
        ]
    if niveau==4:
        plateformes=[[1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,50],
              [1,49,0,0,0,1,0,0,0,0,0,0,0,0,1,50],
              [1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,50],
              [0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,50],
              [0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,50],
              [0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,50],
              [0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,50],
              [0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,1,1,0,0,1,0,0,0,0,0,1,0,0,0,50],
              [1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,50], 
              [1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,50], 
              [1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,50], 
              [1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,50], 
              [1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,50],
             ]
             
        niv_1 = [[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
         [3,0,0,10,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0],
	     [3,0,0,0,3,5,5,5,5,5,3,3,3,3,5,5,5,5,5,3,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [3,3,3,3,3,0,0,0,0,0,3,3,3,3,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [2,2,2,2,2,4,4,4,4,4,4,4,2,2,2,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4],
        ]
    if niveau==5:
        plateformes=[[0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,50],
              [0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,1,0,0,0,0,0,0,0,0,49,1,50],
              [0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,50],
              [0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,50],
              [1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,50],
              [0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,50],
              [0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,50],
              [0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,50],
              [0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,50],
              [0,0,0,1,0,0,1,0,0,0,2,0,0,0,0,50],
              [0,0,49,1,0,0,0,0,0,0,1,0,0,0,0,50],
              [2,2,2,1,0,0,0,0,0,0,1,0,0,0,0,50],
              [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,50], 
              [0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [0,0,0,0,2,1,1,1,2,0,0,0,0,0,0,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
             ]
             
        niv_1 = [[0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0],
         [0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,3,0,0,0,3,3,3,3,3,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,3,0,0,0,3,3,3,3,3,3,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0],
	     [0,0,3,3,3,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0],
	     [0,0,0,0,3,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0],
	     [0,0,0,0,3,0,0,0,3,5,5,5,3,3,3,3,3,3,0,0,0,0,0,0,3,0,0,0,0,0],
	     [0,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0],
	     [0,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0],
	     [3,3,0,0,1,0,0,0,3,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,1,0,0,0,3,0,0,0,1,0,0,0,0,5,3,3,3,5,0,0,0,0,0,0,0,0],
	     [0,0,0,0,1,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [2,2,2,2,1,4,4,4,2,2,2,2,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],
        ]

    if niveau==6:
        plateformes=[[1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,50],
              [1,0,0,0,1,1,1,1,0,0,1,0,0,0,0,50],
              [1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,50],
              [1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,50],
              [1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,50],
              [1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,50],
              [1,1,1,1,1,0,0,1,0,0,1,0,0,0,0,50],
              [1,0,0,0,1,0,0,1,0,0,2,0,0,0,1,50],
              [1,0,0,0,1,0,0,1,0,0,2,0,0,0,1,50],
              [1,2,2,2,1,0,0,1,0,0,2,0,0,0,1,50],
              [1,2,2,2,1,0,0,1,0,0,1,0,0,0,0,50],
              [1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,50],
              [1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,50],
              [1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,50],
              [1,0,0,0,1,2,2,1,0,0,1,0,0,0,0,50],
              [1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,50],
              [1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,50],
              [1,0,0,0,1,0,0,0,0,1,1,0,0,0,1,50], 
              [1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,50], 
              [1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,50], 
              [1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,50], 
              [1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,50], 
              [1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,50], 
              [1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,50], 
              [1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,50], 
              [1,0,0,49,1,1,1,1,1,1,1,0,0,0,1,50], 
              [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,50],
             ]
        niv_1 = [[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
            [3,0,0,0,0,0,0,0,0,3,3,3,3,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
            [3,0,0,0,0,0,0,0,0,3,3,3,3,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
            [3,0,0,0,0,0,0,0,0,3,3,3,3,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
            [3,0,0,0,3,0,0,0,0,3,3,3,3,3,0,0,0,3,3,3,3,2,2,2,2,2,2,2,2,2],
            [3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,3,1,1,1,1,1],
            [3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,3,1,1,1,1,1],
            [3,0,0,0,3,3,5,5,5,3,3,3,3,3,5,5,5,3,0,0,0,0,0,0,3,1,1,1,1,1],
            [3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,1,1,1],
            [3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,1,1,1,1,1],
            [3,3,3,3,3,3,3,3,3,3,5,5,5,3,3,3,3,3,3,3,3,0,0,0,3,3,3,3,3,1],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
            [2,2,2,2,4,4,4,4,4,4,2,2,2,4,4,4,4,4,4,2,2,2,2,2,2,2,2,2,2,1],
            ]
            
    if niveau==7:
        plateformes=[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,50],
              [1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,2,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,2,0,0,1,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,1,0,0,0,2,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,50],
              [1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,50],
              [1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,50],
              [0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50],
              [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50],
              [0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,1,0,49,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
             ]
             
        niv_1 = [[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
         [3,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [3,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [3,0,0,0,3,0,0,3,3,3,3,3,0,0,3,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0],
	     [3,0,0,0,3,0,0,0,0,0,0,0,0,0,3,1,1,1,2,2,0,0,0,0,0,0,0,0,0,0],
	     [3,0,0,0,3,0,0,0,0,0,0,0,0,0,3,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0],
	     [2,0,0,0,3,0,0,0,0,0,0,0,0,0,3,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0],
	     [1,0,0,0,3,5,5,5,0,0,0,5,5,5,3,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0],
	     [1,0,0,0,2,0,0,0,0,0,0,0,0,0,3,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0],
	     [1,0,0,0,1,0,0,0,0,0,0,0,0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0],
	     [1,0,0,0,1,0,0,0,0,0,0,0,0,0,3,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0],
	     [1,0,0,0,1,0,0,0,0,5,0,0,0,0,3,3,3,3,3,3,3,3,3,1,1,0,0,0,0,0],
	     [1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,2,2,0,0,0],
	     [1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,3,1,1,1,1,2,2,2],
	     [1,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,4,4,2,2,2,1,1,1,1,1,1,1],
        ]
    if niveau==8:
        plateformes=[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,50],
              [1,49,0,0,2,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,2,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,2,0,0,0,0,0,0,0,0,0,1,50],
              [1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,50],
              [1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,50],
              [1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,50],
              [1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,50], 
              [1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,50], 
              [1,0,0,0,0,2,0,0,0,0,0,1,0,0,0,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50], 
              [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,50],
             ]
             
        niv_1 = [[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
         [3,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
	     [3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
	     [3,0,0,0,0,0,0,5,3,5,0,5,3,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3],
	     [3,5,5,5,3,0,0,0,0,0,0,0,0,0,0,5,3,5,0,0,0,0,0,0,0,0,0,0,0,2],
	     [3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,5,0,0,0,1],
	     [3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
	     [2,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
	     [1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
	     [1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
	     [1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
	     [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,3,0,0,0,0,3,0,0,0,1],
	     [1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
	     [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
	     [1,2,2,2,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1],
        ]
    if niveau==9:
        plateformes=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [2,2,0,0,0,49,0,0,0,0,0,0,0,0,0,50],
              [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,0,0,0,2,1,0,0,0,0,0,2,2,0,50],
              [0,0,0,0,2,2,1,0,0,0,0,0,0,0,0,50],
              [0,0,0,0,2,2,1,0,0,0,0,0,0,1,0,50],
              [0,0,0,0,2,2,1,0,0,0,0,0,0,0,0,50],
              [2,0,0,0,0,5,1,0,0,0,0,0,0,2,0,50],
              [0,2,0,0,0,1,0,0,0,0,0,0,2,2,0,50],
              [0,0,2,0,0,1,0,0,0,0,0,0,0,2,0,50],
              [0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,2,0,0,0,1,0,0,0,0,0,0,0,0,1,50],
              [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50],
              [0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,50],
              [0,0,0,0,2,2,1,0,0,0,0,0,2,2,0,50], 
              [0,0,0,0,2,2,1,0,0,0,0,0,2,2,0,50], 
              [0,0,0,0,2,2,1,0,0,0,0,0,0,2,0,50], 
              [0,0,0,0,0,2,1,0,0,0,0,0,0,1,0,50], 
              [0,0,0,0,0,1,2,2,1,0,0,0,0,1,0,50], 
              [0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,50], 
              [0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,50], 
              [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,50], 
              [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,50],
             ]
             
        niv_1 = [[0,0,0,0,3,5,5,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,3],
         [0,0,0,0,3,5,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,3],
	     [0,0,0,0,3,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,3],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,3],
	     [0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,3],
	     [0,0,0,0,0,10,0,5,5,5,5,5,3,3,0,0,0,3,0,5,5,5,5,5,3,3,0,0,0,3],
	     [0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,3,3,3,3,3,5,0,0,0,0,2],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,1],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,1],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,1],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,1],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,1],
	     [0,0,0,0,0,0,0,5,0,0,0,0,5,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,0,1],
	     [0,0,0,0,0,0,0,5,0,3,0,5,5,5,0,0,0,0,0,5,5,5,5,3,3,3,3,5,0,1],
	     [2,2,2,4,4,4,4,4,4,4,4,4,4,4,4,4,2,2,4,4,4,4,4,4,4,4,4,4,4,1],
        ]
    if niveau==10:

        eau_image = pygame.image.load("eau_foret.png")
        sprite_fond = pygame.image.load("fond_niv_3.jpg")

        plateformes=[[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
             ]
             
        niv_1 = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
         [3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        ]
    if niveau==11:
        plateformes=[[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
             ]
             
        niv_1 = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
         [3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        ]
    if niveau==12:
        plateformes=[[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
             ]
             
        niv_1 = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
         [3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        ]
    if niveau==13:
        plateformes=[[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,50],
             ]
             
        niv_1 = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
         [3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        ]
    if niveau==30:
        plateformes=[[2,2,2,2,2,2,2,2,1,1,1,2,0,0,1,50],
              [0,0,0,0,0,0,0,2,1,1,1,2,0,0,1,50],
              [0,0,0,0,0,0,0,1,1,1,2,0,0,0,1,50],
              [0,0,0,2,2,0,0,1,1,2,0,0,0,0,2,50],
              [0,0,0,2,1,0,0,1,2,0,0,0,0,2,1,50],
              [0,0,0,1,1,0,0,1,2,0,0,0,2,1,1,50],
              [0,0,0,2,2,0,0,1,2,0,0,0,0,2,1,50],
              [0,0,0,2,1,0,0,2,2,0,0,0,0,0,2,50],
              [0,0,0,2,2,0,0,2,1,2,0,0,0,0,2,50],
              [0,0,0,1,1,0,0,2,1,2,0,0,0,0,2,50],
              [0,0,0,2,2,0,0,1,2,0,0,0,0,2,1,50],
              [0,0,0,2,2,0,0,1,2,0,0,0,1,1,1,50],
              [0,0,0,2,2,0,0,1,2,0,0,0,1,1,1,50],
              [0,0,0,2,0,0,0,2,0,0,0,0,1,1,1,50],
              [0,0,0,2,0,0,0,0,0,0,0,0,2,1,1,50],
              [0,0,0,2,0,0,0,0,0,0,0,2,1,1,1,50],
              [0,0,0,1,2,0,0,0,0,0,1,1,1,1,1,50],
              [0,0,0,1,1,2,2,2,2,2,1,1,1,1,1,50],
              [0,0,0,2,1,1,2,2,2,2,2,2,2,1,1,50],
              [0,0,0,2,1,1,0,0,0,0,0,0,0,0,0,50],
              [0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,50], 
              [0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,50], 
              [0,0,0,0,0,0,2,0,0,0,0,2,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,50], 
              [0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,50], 
              [2,2,2,2,2,2,2,2,2,2,2,0,0,0,1,50], 
              [2,2,2,2,49,1,2,2,2,2,0,0,0,0,2,50], 
              [2,2,0,0,0,1,2,2,2,0,0,0,0,2,1,50], 
              [2,0,0,0,0,0,0,0,0,0,0,0,2,1,1,50], 
              [2,0,0,0,0,0,0,0,0,1,2,2,1,1,1,50],
             ]
        niv_1 = [[5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5],
         [5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0],
         [5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0],
         [5,0,0,5,5,1,5,5,5,1,5,5,5,5,5,5,1,1,5,5,0,0,0,0,0,5,5,0,0,0],
         [5,0,0,5,1,1,5,1,5,1,5,5,5,0,0,0,5,1,1,1,5,0,0,0,0,5,10,0,0,0],
         [5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,1,1,5,0,0,0,5,1,1,0,0],
         [5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,0,0,5,5,5,0,0],
         [5,5,1,1,1,1,1,5,5,5,1,1,1,5,0,0,0,5,5,0,0,0,0,0,0,5,5,5,0,0],
         [1,1,1,1,5,5,5,5,1,1,5,5,5,0,0,0,0,5,5,0,0,0,0,0,0,5,5,5,0,0],
         [1,1,1,5,0,0,0,0,5,5,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,5,0,0,1],
         [1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,5,0,0,0,0,0,0,5,0,0,0,5],
         [5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,1,5,0,0,0,5,5,5,0,0,0,0,5],
         [0,0,0,0,0,5,0,0,0,0,0,2,2,2,5,2,1,1,5,0,0,0,0,0,0,0,0,0,5,2],
         [0,0,0,0,5,2,5,0,0,0,5,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,5,2,1],
         [2,2,2,5,2,1,1,5,5,5,2,1,1,1,1,1,1,1,1,0,0,0,2,2,2,2,5,2,1,1],
        ]

         
    surface.fill((0, 0, 0))
    surface.blit(sprite_fond, [0, 0])
    surface.blit(sprite_image, [x_joueur*quadrillage, y_joueur*quadrillage])
    
    for x in range(0,len(plateformes)):
        for y in range(0,15):
            if plateformes[x][y]==1:
                pygame.draw.rect(surface, GREEN, (x*quadrillage,y*quadrillage , quadrillage, quadrillage))
            if plateformes[x][y]==49:
                pygame.draw.rect(surface, BLUE, (x*quadrillage,y*quadrillage , quadrillage, quadrillage))
            
    Sol=False    
    Plafond=False
    for y in range(0,len(plateformes[(floor(x_joueur))])):
        if plateformes[floor(x_joueur)][15-y]==1 or plateformes[ceil(x_joueur)][15-y]==1:
            if 15-y>=y_joueur:
                distance_sol=15-y-y_joueur
                Sol=True
        if plateformes[floor(x_joueur)][y]==1 or plateformes[ceil(x_joueur)][y]==1:
            if y<=y_joueur:
                distance_toit=(y-y_joueur)*(-1)
                Plafond=True
                    
        
    Droite=False
    Gauche=False
    for x in range(0,len(plateformes)):
        if plateformes[29-x][floor(y_joueur)] ==1 or plateformes[29-x][ceil(y_joueur)] ==1:
            if 29-x>=x_joueur:
                distance_droite=29-x-x_joueur
                Droite=True
                
        if plateformes[x][floor(y_joueur)] ==1 or plateformes[x][ceil(y_joueur)] ==1:
            if x<=x_joueur:
                distance_gauche=(x-x_joueur)*(-1)
                Gauche=True
    if distance_gauche==1 and Gauche==True:
        ToucheGauche=True
    else:
        ToucheGauche=False
    
    if distance_droite==1 and Droite==True:
        ToucheDroite=True
    else:
        ToucheDroite=False
        
        
    
    if distance_sol==1 and Sol==True:
        ToucheSol=True
        EnLAir=False
        EnSaut=False
        DoubleSautUtilise=False
    else:
        ToucheSol=False
        EnLAir=True
    

    
    if distance_toit<=((elan_y_joueur)*(12-TempsAir)/diviseur)+1 and Plafond==True:
        ToucheToit==True
        TempsAir=12
        y_joueur-=distance_toit-1-((elan_y_joueur)*(12-TempsAir)/diviseur)
    else:
        ToucheToit=False
            
    if ToucheSol==False and frame_1_saut==False:
        if distance_sol>=(((elan_y_joueur)*(12-TempsAir)/diviseur)*g*(-1)+1) or Sol==False:
            if EnSaut==False and EnLAir==True and DebutSaut==False:
                TempsAir=12
                DebutSaut=True    
            y_joueur-=((elan_y_joueur)*(12-TempsAir)*g)/diviseur
        else:
            y_joueur+=distance_sol-1

    if elan_gauche_joueur>0:
        if distance_droite>=1+elan_gauche_joueur/13:
            x_joueur+=elan_gauche_joueur/13
        
        elan_gauche_joueur=elan_gauche_joueur/1.2
        if elan_gauche_joueur<1:
            elan_gauche_joueur=0
        if elan_gauche_joueur>1.3:
            elan_gauche_joueur+=0.2
    
    if elan_droite_joueur>0:
        if distance_gauche>=1+elan_gauche_joueur/13:
            x_joueur-=elan_droite_joueur/13
        
        elan_droite_joueur=elan_droite_joueur/1.2
        if elan_droite_joueur<1:
            elan_droite_joueur=0
        if elan_droite_joueur>1.3:
            elan_droite_joueur+=0.2
    
    if frame_1_saut==True:
        if ToucheToit==False:
            y_joueur-=((elan_y_joueur)*(12-TempsAir)*g)/diviseur
            frame_1_saut=False    
        else:
            frame_1_saut=False
            EnSaut=False
            EnLAir=False
                
    if ToucheSol==False and DoubleSautUtilise==False:
        DoubleSautPossible=True
            
    else:
        DoubleSautPossible=False
            
    if distance_droite<1:
        x_joueur=ceil(x_joueur)
        y_joueur+=0.5
    if distance_gauche<1:
        x_joueur=floor(x_joueur)
        y_joueur+=0.5
        
        
    if ToucheGauche==True:
        elan_droite_joueur=0
    if ToucheDroite==True:
        elan_gauche_joueur=0
    #Détecte quelle touche est appuyée
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()

    else:

        touches = pygame.key.get_pressed()

        if derniere_touche == 1 and touche_presser == False :
            if frame >= 14 :
                 sprite_image = stay_droite_2
            else :
                 sprite_image = stay_droite_1
        if derniere_touche == 2 and touche_presser == False :
            if frame >= 14 :
                 sprite_image = stay_gauche_2
            else :
                sprite_image = stay_gauche_1

        touche_presser = False
        
        if touches[pygame.K_SPACE] and GlisseMurGauche==True:
            TempsAir=1
            elan_gauche_joueur=6
            sprite_image = glisse_gauche
            touche_presser = True
            
        if touches[pygame.K_d] and TempsAir>=6:
            elan_gauche_joueur=elan_gauche_joueur/1.4
            touche_presser = True

            
        if touches[pygame.K_q] and TempsAir>=6:
            elan_droite_joueur=elan_droite_joueur/1.4
            touche_presser = True
            
            
        if touches[pygame.K_SPACE] and GlisseMurDroite==True:
            TempsAir=1
            elan_droite_joueur=6
            sprite_image = glisse_droite
            touche_presser = True
            
            
        if touches[pygame.K_q] and ToucheGauche==False and x_joueur>=0.2:
            elan_droite_joueur=0
            touche_presser = True
            if distance_gauche>=1.2 or Gauche==False:
                x_joueur-=0.2
            else:
                x_joueur-=distance_gauche-1
                ToucheGauche=True
        if touches[pygame.K_d] and ToucheDroite==False and len(plateformes)-1.2>x_joueur:
            elan_gauche_joueur=0
            if distance_droite>=1.2 or Droite==False:
                x_joueur+=0.2
            else:
                x_joueur+=distance_droite-1
                ToucheDroite=True
                
        
                
# ce if vas permettre d'afficher l'animation de course du personnage lorsqu'il vas a droite
        if touches[pygame.K_d] and ToucheDroite == False and ToucheGauche == False and ToucheSol == True and DoubleSautPossible == False and DoubleSautUtilise == False :
            if frame == 0 :
                    sprite_image = run_droite_1
            if frame == 2 :
                    sprite_image = run_droite_2
            if frame == 4 :
                    sprite_image = run_droite_3
            if frame == 6 :
                    sprite_image = run_droite_4
            if frame == 8 :
                    sprite_image = run_droite_1
            if frame == 10 :
                    sprite_image = run_droite_2
            if frame == 12 :
                    sprite_image = run_droite_3
            if frame == 14 :
                    sprite_image = run_droite_4
            if frame == 16 :
                    sprite_image = run_droite_1
            if frame == 18 :
                    sprite_image = run_droite_2
            if frame == 20 :
                    sprite_image = run_droite_3
            if frame == 22 :
                    sprite_image = run_droite_4
            if frame == 24 :
                    sprite_image = run_droite_1
            if frame == 26 :
                    sprite_image = run_droite_2
            if frame == 28 :
                    sprite_image = run_droite_3
            touche_presser = True
            derniere_touche = 1

# ce if vas permettre d'afficher l'animation de course du personnage lorsqu'il vas a gauche
        if touches[pygame.K_q] and ToucheDroite == False and ToucheGauche == False and ToucheSol == True and DoubleSautPossible == False and DoubleSautUtilise == False :
            if frame == 0 :
                    sprite_image = run_gauche_1
            if frame == 2 :
                    sprite_image = run_gauche_2
            if frame == 4 :
                    sprite_image = run_gauche_3
            if frame == 6 :
                    sprite_image = run_gauche_4
            if frame == 8 :
                    sprite_image = run_gauche_1
            if frame == 10 :
                    sprite_image = run_gauche_2
            if frame == 12 :
                    sprite_image = run_gauche_3
            if frame == 14 :
                    sprite_image = run_gauche_4
            if frame == 16 :
                    sprite_image = run_gauche_1
            if frame == 18 :
                    sprite_image = run_gauche_2
            if frame == 20 :
                    sprite_image = run_gauche_3
            if frame == 22 :
                    sprite_image = run_gauche_4
            if frame == 24 :
                    sprite_image = run_gauche_1
            if frame == 26 :
                    sprite_image = run_gauche_2
            if frame == 28 :
                    sprite_image = run_gauche_3
            touche_presser = True
            derniere_touche = 2

# ce if vas permettre d'afficher l'animation de saut du personnage lorsqu'il vas sauter vers la droite
        if touches[pygame.K_d] and ToucheDroite == False and ToucheGauche == False and ToucheSol == False :
            sprite_image = jump_droite
            touche_presser = True

# ce if vas permettre d'afficher l'animation de saut du personnage lorsqu'il vas sauter vers la gauche
        if touches[pygame.K_q] and ToucheDroite == False and ToucheGauche == False and ToucheSol == False :
            sprite_image = jump_gauche
            touche_presser = True

        if touches[pygame.K_q] and ToucheGauche==True and ToucheSol==False and TempsAir>=13:
            GlisseMurGauche=True
            g=0.5
            TempsAir=13
            sprite_image = glisse_gauche
        else:
            GlisseMurGauche=False
            g=1
                
            
        if touches[pygame.K_d] and ToucheDroite==True and ToucheSol==False and TempsAir>=13:
            GlisseMurDroite=True
            g=0.5
            TempsAir=13
            sprite_image = glisse_droite
        else:
            GlisseMurDroite=False
            g=1
                
            
        if touches[pygame.K_SPACE] and ToucheSol==True and TempsAir==0 and ToucheToit==False:
            frame_1_saut=True
            elan_y_joueur+=9
            EnSaut=True
            TempsAir=1
                
                
        if touches[pygame.K_SPACE] and DoubleSautPossible==True and TempsAir>=5 and Y_Maintenu==False and GlisseMurGauche==False and GlisseMurDroite==False:
                elan_y_joueur+=0.3
                EnSaut=True
                TempsAir=1
                DoubleSautUtilise=True
                    
        Y_Maintenu=False
        if touches[pygame.K_SPACE]:
            Y_Maintenu=True
            sonsaut.play()
            
            
            
        if ToucheSol==False:
            TempsAir+=1
        else:
            TempsAir=0
            elan_y_joueur=1
            DebutSaut=False
                
            
        if plateformes[floor(x_joueur)][floor(y_joueur+1)]==50 or plateformes[floor(x_joueur)][floor(y_joueur+1)]==50:
            JoueurMort=True
                        
        
                        
                        
        if JoueurMort==True:
            x_joueur=1
            y_joueur=13
            if TempsMort>=8:
                JoueurMort=False
            else: 
                TempsMort+=1
            
        if plateformes[floor(x_joueur)][floor(y_joueur)]==2 or plateformes[ceil(x_joueur)][floor(y_joueur)]==2 or plateformes[floor(x_joueur)][ceil(y_joueur)]==2 or plateformes[ceil(x_joueur)][ceil(y_joueur)]==2:
            JoueurMort=True
            
        if plateformes[floor(x_joueur)][floor(y_joueur)]==49 or plateformes[ceil(x_joueur)][floor(y_joueur)]==49 or plateformes[floor(x_joueur)][ceil(y_joueur)]==49 or plateformes[ceil(x_joueur)][ceil(y_joueur)]==49:
            y_joueur=13
            x_joueur=1
            niveau+=1
            
        if touches[pygame.K_k]:
            JoueurMort=True
            
    if distance_droite<1:
        x_joueur=floor(x_joueur)
        
    if distance_gauche<1:
        x_joueur=ceil(x_joueur)

    

    afficher_un_niv(0,0,niv_1)
    clock.tick(30)
    pygame.display.update()
pygame.quit()

 
